name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.0.1, etc.
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Required to create releases and upload assets

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: macos
            executable_name: ez-expense
            package_name: ez-expense-macos
          - os: windows-latest
            platform: windows
            executable_name: ez-expense.exe
            package_name: ez-expense-windows
          - os: ubuntu-latest
            platform: linux
            executable_name: ez-expense
            package_name: ez-expense-linux

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv (Windows)
      if: matrix.platform == 'windows'
      run: |
        irm https://astral.sh/uv/install.ps1 | iex
        echo "$env:USERPROFILE\\.cargo\\bin" >> $env:GITHUB_PATH
      shell: pwsh

    - name: Install uv (Unix)
      if: matrix.platform != 'windows'
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      shell: bash

    - name: Install dependencies
      run: |
        uv sync --group build

    - name: Install Playwright browsers (non-Windows)
      if: matrix.platform != 'windows'
      run: |
        uv run playwright install chromium --with-deps

    - name: Install Playwright browsers (Windows)
      if: matrix.platform == 'windows'
      run: |
        uv run playwright install chromium

    - name: Build executable (Unix)
      if: matrix.platform != 'windows'
      run: |
        cd deployment
        chmod +x build.sh
        ./build.sh

    - name: Build executable (Windows)
      if: matrix.platform == 'windows'
      run: |
        cd deployment
        .\build.bat
      shell: cmd

    - name: Create release package
      run: |
        mkdir -p release-package

        if [ "${{ matrix.platform }}" = "macos" ]; then
          # Copy macOS app bundle if it exists
          if [ -d "dist/EZ-Expense.app" ]; then
            cp -r dist/EZ-Expense.app release-package/
          fi
          # Copy command-line executable
          if [ -f "dist/${{ matrix.executable_name }}" ]; then
            cp dist/${{ matrix.executable_name }} release-package/
          fi
          # Copy macOS-specific files
          cp deployment/USER_GUIDE.md release-package/
          if [ -f "deployment/run-ez-expense.sh" ]; then
            cp deployment/run-ez-expense.sh release-package/
            chmod +x release-package/run-ez-expense.sh
          fi
          # Create macOS README
          cat > release-package/README.txt << 'EOF'
        EZ-Expense for macOS
        ===================

        QUICK START:
        1. Copy .env.template to .env
        2. Edit .env with your API keys (see USER_GUIDE.md)
        3. Double-click EZ-Expense.app OR run ./ez-expense in Terminal

        SYSTEM REQUIREMENTS:
        - macOS 10.15 or later (supports both Intel and Apple Silicon)
        - 4GB RAM available
        - Internet connection (for AI services)

        The app will open your browser at http://localhost:3000
        EOF

        elif [ "${{ matrix.platform }}" = "windows" ]; then
          # Copy Windows executable
          cp dist/${{ matrix.executable_name }} release-package/
          cp deployment/USER_GUIDE.md release-package/
          # Create Windows launcher
          cat > release-package/run-ez-expense.bat << 'EOF'
        @echo off
        echo 🚀 Starting EZ-Expense...
        echo.

        if not exist ".env" (
            echo ⚠️  No .env file found!
            echo Please copy .env.template to .env and fill in your API keys.
            echo See USER_GUIDE.md for instructions.
            pause
            exit /b 1
        )

        echo Starting EZ-Expense...
        echo The app will open your browser at http://localhost:3000
        echo Keep this window open while using the app!

        ez-expense.exe
        pause
        EOF
          # Create Windows README
          cat > release-package/README.txt << 'EOF'
        EZ-Expense for Windows
        =====================

        QUICK START:
        1. Copy .env.template to .env
        2. Edit .env with your API keys (see USER_GUIDE.md)
        3. Double-click run-ez-expense.bat

        SYSTEM REQUIREMENTS:
        - Windows 10 or later (64-bit)
        - 4GB RAM available
        - Internet connection (for AI services)

        The app will open your browser at http://localhost:3000
        Keep the command window open while using the app!
        EOF

        else
          # Linux
          cp dist/${{ matrix.executable_name }} release-package/
          cp deployment/USER_GUIDE.md release-package/
          chmod +x release-package/${{ matrix.executable_name }}
          # Create Linux README
          cat > release-package/README.txt << 'EOF'
        EZ-Expense for Linux
        ===================

        QUICK START:
        1. Copy .env.template to .env
        2. Edit .env with your API keys (see USER_GUIDE.md)
        3. Run ./ez-expense in terminal

        SYSTEM REQUIREMENTS:
        - Linux (64-bit) with glibc 2.17 or later
        - 4GB RAM available
        - Internet connection (for AI services)

        The app will open your browser at http://localhost:3000
        Keep the terminal open while using the app!
        EOF
        fi

        # Copy environment template to all platforms
        if [ -f ".env.template" ]; then
          cp .env.template release-package/
        fi
      shell: bash

    - name: Create ZIP archive
      run: |
        if [ "${{ matrix.platform }}" = "windows" ]; then
          # Use PowerShell for Windows
          powershell -Command "Compress-Archive -Path 'release-package\\*' -DestinationPath '${{ matrix.package_name }}.zip'"
        else
          # Use zip for Unix systems
          cd release-package
          zip -r "../${{ matrix.package_name }}.zip" .
          cd ..
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.package_name }}
        path: ${{ matrix.package_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Extract version from tag
      id: extract_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Prepare release notes
      id: release_notes
      run: |
        # Read template and substitute version
        VERSION="${{ steps.extract_version.outputs.VERSION }}"
        if [ -f ".github/release-template.md" ]; then
          sed "s/\${VERSION}/$VERSION/g" .github/release-template.md > release-notes.md
        else
          echo "## EZ-Expense $VERSION" > release-notes.md
          echo "" >> release-notes.md
          echo "### Downloads" >> release-notes.md
          echo "- **macOS**: Download \`ez-expense-macos.zip\`" >> release-notes.md
          echo "- **Windows**: Download \`ez-expense-windows.zip\`" >> release-notes.md
          echo "- **Linux**: Download \`ez-expense-linux.zip\`" >> release-notes.md
          echo "" >> release-notes.md
          echo "### Setup" >> release-notes.md
          echo "1. Extract the ZIP file" >> release-notes.md
          echo "2. Copy \`.env.template\` to \`.env\`" >> release-notes.md
          echo "3. Edit \`.env\` with your API keys and configuration" >> release-notes.md
          echo "4. Run the executable" >> release-notes.md
        fi

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version.outputs.VERSION }}
        name: EZ-Expense ${{ steps.extract_version.outputs.VERSION }}
        body_path: release-notes.md
        draft: false
        prerelease: false
        files: |
          artifacts/ez-expense-macos/ez-expense-macos.zip
          artifacts/ez-expense-windows/ez-expense-windows.zip
          artifacts/ez-expense-linux/ez-expense-linux.zip